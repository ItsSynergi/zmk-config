#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define ALT 1
#define CON 2

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
    &kp GRAV   &kp NUM_1  &kp NUM_2  &kp NUM_3  &kp NUM_4  &kp NUM_5  &kp LBKT       &kp RBKT   &kp NUM_6  &kp NUM_7  &kp NUM_8  &kp NUM_9  &kp NUM_0  &kp MINUS
    &kp TAB    &kp Q      &kp W      &kp E      &kp R      &kp T      &kp C_VOL_UP   &kp C_MUTE &kp Y      &kp U      &kp I      &kp O      &kp SCLN   &kp BSLH
    &kp ESC    &kp A      &kp S      &kp D      &kp F      &kp G                                &kp H      &kp J      &kp K      &kp L      &kp P      &kp APOS
    &kp DEL    &kp Z      &kp X      &kp C      &kp V      &kp B      &kp C_VOL_DN   &kp C_PP   &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH   &kp EQUAL
    &none      &kp PSCRN  &kp LCTRL  &kp LALT   &kp LGUI                                                   &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &none
                                                           &tog DEF   &tog CON       &kp C_PREV &kp C_NEXT
                                                                      &kp C_BRI_UP   &kp PG_UP
                                                &kp LSFT   &kp BSPC                             &kp RETURN &kp SPACE
                                                                      &kp C_BRI_DN   &kp PG_DN
                        >;
                };

                layer_1 {
                        bindings = <
    &kp GRAV   &kp NUM_1  &kp NUM_2  &kp NUM_3  &kp NUM_4  &kp NUM_5  &kp LBKT       &kp RBKT   &kp NUM_6  &kp NUM_7  &kp NUM_8  &kp NUM_9  &kp NUM_0  &kp MINUS
    &kp TAB    &kp Q      &kp W      &kp E      &kp R      &kp T      &kp C_VOL_UP   &kp C_MUTE &kp Y      &kp U      &kp I      &kp O      &kp P      &kp BSLH
    &kp ESC    &kp A      &kp S      &kp D      &kp F      &kp G                                &kp H      &kp J      &kp K      &kp L      &kp SCLN   &kp APOS
    &kp DEL    &kp Z      &kp X      &kp C      &kp V      &kp B      &kp C_VOL_DN   &kp C_PP   &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH   &kp EQUAL
    &none      &kp PSCRN  &kp LCTRL  &kp LALT   &kp LGUI                                                   &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &none
                                                           &tog DEF   &tog CON       &kp C_PREV &kp C_NEXT
                                                                      &kp C_BRI_UP   &kp PG_UP
                                                &kp LSFT   &kp BSPC                             &kp RETURN &kp SPACE
                                                                      &kp C_BRI_DN   &kp PG_DN
                        >;
                };

                layer_2 {
                        bindings = <
    &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &bt BT_CLR   &bt BT_SEL 0
    &none      &kp F1     &kp F2     &kp F3     &kp F4     &none      &none      &none      &none      &none      &none      &none      &none        &bt BT_SEL 1
    &none      &kp F5     &kp F6     &kp F7     &kp F8     &none                            &none      &none      &none      &none      &none        &bt BT_SEL 2
    &none      &kp F9     &kp F10    &kp F11    &kp F12    &none      &none      &none      &none      &none      &none      &none      &none        &bt BT_SEL 3
    &none      &none      &none      &none      &none                                                  &none      &none      &none      &out OUT_TOG &bt BT_SEL 4
                                                           &tog DEF   &tog CON   &none      &none 
                                                                      &none      &none 
                                                &none      &none                            &none      &none 
                                                                      &none      &none 
                        >;
                };
        };
};
